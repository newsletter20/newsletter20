{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\IM-BITCH\\\\Documents\\\\Programming Projects\\\\react please\\\\morepizza\\\\src\\\\components\\\\ButtonsField.js\";\nimport React, { useState, useRef } from 'react';\nimport MoreButton from './MoreButton.js';\n\nfunction ButtonsField(_ref) {\n  let {\n    onMore\n  } = _ref;\n  const [poses, setPoses] = useState([[50, 50, \"#ffffff\"]]);\n  const divRef = useRef();\n\n  const rndPercent = () => {\n    return Math.random() * 100;\n  };\n\n  function moreClick(cPos) {\n    //Change poses touching clicked pos\n    poses.forEach(function (p, i) {\n      if (p !== cPos) {\n        let isTouching = false;\n        const din = getRandomInt(1, 6);\n        const h = 50 * din / divRef.current.offsetHeight * 100;\n        const w = 100 * din / divRef.current.offsetWidth * 100;\n        const leftGap = cPos[1] - (p[1] + w);\n        const rightGap = p[1] - (cPos[1] + w);\n        const topGap = cPos[0] - (p[0] + h);\n        const bottomGap = p[0] - (cPos[0] + h);\n        if (leftGap < 0 && rightGap < 0 && topGap < 0 && bottomGap < 0) isTouching = true;\n        let d = 0.4;\n        let a = 3;\n\n        if (isTouching) {\n          if (leftGap >= rightGap) p[1] += leftGap * d - a;else p[1] -= rightGap * d - a;\n          if (topGap >= bottomGap) p[0] += topGap * d - a;else p[0] -= bottomGap * d - a; //cPos[2] = \"#\" + Math.floor(Math.random()*16777215).toString(16)\n\n          p[2] = \"#\" + Math.floor(Math.random() * 16777215).toString(16);\n        }\n      }\n    }); //Call component onMore event\n\n    onMore(); //Push new MoreButton\n\n    let newButtonPos = [];\n\n    for (let i = 0; i < getRandomInt(1, 1); i++) {\n      newButtonPos.push([rndPercent(), rndPercent(), \"#ffffff\"]);\n    }\n\n    setPoses([...poses, ...newButtonPos]);\n  }\n\n  function getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ButtonsField\",\n    ref: divRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, poses.map(p => /*#__PURE__*/React.createElement(MoreButton, {\n    pos: p,\n    onClick: () => moreClick(p),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 29\n    }\n  })));\n}\n\nexport default ButtonsField;","map":{"version":3,"sources":["C:/Users/IM-BITCH/Documents/Programming Projects/react please/morepizza/src/components/ButtonsField.js"],"names":["React","useState","useRef","MoreButton","ButtonsField","onMore","poses","setPoses","divRef","rndPercent","Math","random","moreClick","cPos","forEach","p","i","isTouching","din","getRandomInt","h","current","offsetHeight","w","offsetWidth","leftGap","rightGap","topGap","bottomGap","d","a","floor","toString","newButtonPos","push","min","max","ceil","map"],"mappings":"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","sourcesContent":["import React, {useState, useRef} from 'react'\r\nimport MoreButton from './MoreButton.js';\r\n\r\nfunction ButtonsField({onMore}) {\r\n    \r\n    const [poses, setPoses] = useState([[50,50,\"#ffffff\"]]);\r\n    \r\n    const divRef = useRef();  \r\n\r\n    const rndPercent = () => { return Math.random() * (100) }\r\n\r\n    function moreClick(cPos) {\r\n    \r\n\r\n        //Change poses touching clicked pos\r\n        poses.forEach(function(p, i) {\r\n            if (p !== cPos) {\r\n                let isTouching = false;\r\n                const din = getRandomInt(1,6)\r\n                const h = 50*din / divRef.current.offsetHeight * 100\r\n                const w = 100*din / divRef.current.offsetWidth * 100\r\n\r\n                const leftGap =  (cPos[1])-(p[1] + w)\r\n                const rightGap = (p[1]) - (cPos[1] + w)\r\n                const topGap = (cPos[0])-(p[0] + h) \r\n                const bottomGap = (p[0]) - (cPos[0]  + h)\r\n\r\n                    if (leftGap < 0 &&\r\n                        rightGap < 0 &&\r\n                        topGap < 0 &&\r\n                        bottomGap < 0)\r\n                        isTouching = true;\r\n\r\n                let d = 0.4\r\n                let a = 3\r\n\r\n                if (isTouching)\r\n                {\r\n                    if (leftGap >= rightGap)\r\n                        p[1] += leftGap*d-a;\r\n                    else\r\n                        p[1] -= rightGap*d-a;\r\n\r\n                    if (topGap >= bottomGap)\r\n                        p[0] += topGap*d-a;\r\n                    else\r\n                        p[0] -= bottomGap*d-a;\r\n\r\n                    //cPos[2] = \"#\" + Math.floor(Math.random()*16777215).toString(16)\r\n                    p[2] = \"#\" + Math.floor(Math.random()*16777215).toString(16) \r\n                }\r\n            }\r\n        })\r\n\r\n        //Call component onMore event\r\n        onMore()\r\n\r\n        //Push new MoreButton\r\n        let newButtonPos = []\r\n        for (let i = 0; i<getRandomInt(1,1);i++)\r\n        {\r\n            newButtonPos.push([rndPercent(),rndPercent(),\"#ffffff\"])     \r\n        }\r\n        setPoses([...poses,...newButtonPos])\r\n        \r\n        \r\n    }\r\n\r\n    function getRandomInt(min, max) {\r\n        min = Math.ceil(min);\r\n        max = Math.floor(max);\r\n        return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n      }\r\n  \r\n    return (\r\n        <div className=\"ButtonsField\" ref={divRef} >\r\n            {poses.map(p => <MoreButton pos={p} onClick={() => moreClick(p)}/>)}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ButtonsField\r\n"]},"metadata":{},"sourceType":"module"}