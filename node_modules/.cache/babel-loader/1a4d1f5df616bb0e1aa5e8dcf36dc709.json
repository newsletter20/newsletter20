{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\IM-BITCH\\\\Documents\\\\Programming Projects\\\\react please\\\\morepizza\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:\\\\Users\\\\IM-BITCH\\\\Documents\\\\Programming Projects\\\\react please\\\\morepizza\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useRef}from'react';import MoreButton from'./MoreButton.js';function ButtonsField(_ref){var onMore=_ref.onMore;var _useState=useState([[50,50,\"#ffffff\"]]),_useState2=_slicedToArray(_useState,2),poses=_useState2[0],setPoses=_useState2[1];var divRef=useRef();var rndPercent=function rndPercent(){return Math.random()*100;};function moreClick(cPos){//Change poses touching clicked pos\nposes.forEach(function(p,i){if(p!==cPos&&p!==null){var isTouching=false;var din=getRandomInt(1,6);var h=50*din/divRef.current.offsetHeight*100;var w=100*din/divRef.current.offsetWidth*100;var hA=50/divRef.current.offsetHeight*100;var wA=100/divRef.current.offsetWidth*100;var leftGap=cPos[1]-(p[1]+w);var rightGap=p[1]-(cPos[1]+w);var topGap=cPos[0]-(p[0]+h);var bottomGap=p[0]-(cPos[0]+h);if(leftGap<0&&rightGap<0&&topGap<0&&bottomGap<0)isTouching=true;var d=0.4;var a=3;if(isTouching){if(leftGap>=rightGap)p[1]+=leftGap*d-a;else p[1]-=rightGap*d-a;if(topGap>=bottomGap)p[0]+=topGap*d-a;else p[0]-=bottomGap*d-a;//cPos[2] = \"#\" + Math.floor(Math.random()*16777215).toString(16)\np[2]=\"#\"+Math.floor(Math.random()*16777215).toString(16);}else{if(p[0]>100+hA||p[0]<-hA||p[1]>100+wA||p[1]<-wA)poses[i]=null;}}});//Call component onMore event\nonMore();//Push new MoreButton\nvar newButtonPos=[];for(var i=0;i<getRandomInt(1,1);i++){newButtonPos.push([rndPercent(),rndPercent(),\"#ffffff\"]);}setPoses([].concat(_toConsumableArray(poses),newButtonPos));}function getRandomInt(min,max){min=Math.ceil(min);max=Math.floor(max);return Math.floor(Math.random()*(max-min)+min);//The maximum is exclusive and the minimum is inclusive\n}return/*#__PURE__*/React.createElement(\"div\",{className:\"ButtonsField\",ref:divRef},poses.map(function(p){return p==null?true:/*#__PURE__*/React.createElement(MoreButton,{pos:p,onClick:function onClick(){return moreClick(p);}});}));}export default ButtonsField;","map":{"version":3,"sources":["C:/Users/IM-BITCH/Documents/Programming Projects/react please/morepizza/src/components/ButtonsField.js"],"names":["React","useState","useRef","MoreButton","ButtonsField","onMore","poses","setPoses","divRef","rndPercent","Math","random","moreClick","cPos","forEach","p","i","isTouching","din","getRandomInt","h","current","offsetHeight","w","offsetWidth","hA","wA","leftGap","rightGap","topGap","bottomGap","d","a","floor","toString","newButtonPos","push","min","max","ceil","map"],"mappings":"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","sourcesContent":["import React, {useState, useRef} from 'react'\r\nimport MoreButton from './MoreButton.js';\r\n\r\nfunction ButtonsField({onMore}) {\r\n    \r\n    const [poses, setPoses] = useState([[50,50,\"#ffffff\"]]);\r\n    \r\n    const divRef = useRef();  \r\n\r\n    const rndPercent = () => { return Math.random() * (100) }\r\n\r\n    function moreClick(cPos) {\r\n    \r\n\r\n        //Change poses touching clicked pos\r\n        poses.forEach(function(p, i) {\r\n            \r\n            if (p !== cPos && p !== null) {\r\n                let isTouching = false;\r\n                const din = getRandomInt(1,6)\r\n                const h = 50*din / divRef.current.offsetHeight * 100\r\n                const w = 100*din / divRef.current.offsetWidth * 100\r\n                const hA = 50 / divRef.current.offsetHeight * 100\r\n                const wA = 100 / divRef.current.offsetWidth * 100\r\n\r\n                const leftGap =  (cPos[1])-(p[1] + w)\r\n                const rightGap = (p[1]) - (cPos[1] + w)\r\n                const topGap = (cPos[0])-(p[0] + h) \r\n                const bottomGap = (p[0]) - (cPos[0]  + h)\r\n\r\n                    if (leftGap < 0 &&\r\n                        rightGap < 0 &&\r\n                        topGap < 0 &&\r\n                        bottomGap < 0)\r\n                        isTouching = true;\r\n\r\n                let d = 0.4\r\n                let a = 3\r\n\r\n                if (isTouching)\r\n                {\r\n                    if (leftGap >= rightGap)\r\n                        p[1] += leftGap*d-a;\r\n                    else\r\n                        p[1] -= rightGap*d-a;\r\n\r\n                    if (topGap >= bottomGap)\r\n                        p[0] += topGap*d-a;\r\n                    else\r\n                        p[0] -= bottomGap*d-a;\r\n\r\n                    //cPos[2] = \"#\" + Math.floor(Math.random()*16777215).toString(16)\r\n                    p[2] = \"#\" + Math.floor(Math.random()*16777215).toString(16) \r\n                }\r\n                else\r\n                {\r\n                    if (p[0]>100+hA || p[0]<-hA || p[1]>100+wA || p[1]<-wA) \r\n                    poses[i] = null;    \r\n                }\r\n\r\n                \r\n            }\r\n        })\r\n\r\n        //Call component onMore event\r\n        onMore()\r\n\r\n        //Push new MoreButton\r\n        let newButtonPos = []\r\n        for (let i = 0; i<getRandomInt(1,1);i++)\r\n        {\r\n            newButtonPos.push([rndPercent(),rndPercent(),\"#ffffff\"])     \r\n        }\r\n        setPoses([...poses,...newButtonPos])\r\n    }\r\n\r\n    function getRandomInt(min, max) {\r\n        min = Math.ceil(min);\r\n        max = Math.floor(max);\r\n        return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n      }\r\n  \r\n    return (\r\n        <div className=\"ButtonsField\" ref={divRef} >\r\n            {poses.map(p => p == null ? true : <MoreButton pos={p} onClick={() => moreClick(p)}/>)}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ButtonsField\r\n"]},"metadata":{},"sourceType":"module"}